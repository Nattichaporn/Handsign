import * as tf from "@tensorflow/tfjs-node";
import fs from "fs";
import { fileURLToPath } from "url";
import path from "path";

// ‚úÖ ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£ import ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà Log ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥
import pkg from 'papaparse';
const { parse } = pkg;

let cachedModel = null;
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

export async function predictFromCSV(csvPath) {
  try {
    const csvFile = fs.readFileSync(csvPath, "utf8");

    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô parse ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÑ‡∏ß‡πâ
    const parsed = parse(csvFile, { header: true, dynamicTyping: true });

    // ‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ
    const data = parsed.data.filter(row => Object.values(row).some(val => val !== null && val !== ''));
    if (data.length === 0) {
      console.warn("‚ö†Ô∏è CSV file is empty or contains no valid data.");
      return []; // ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    }

    const X = data.map(row => Object.values(row));
    const tensor = tf.tensor2d(X);

    if (!cachedModel) {
      console.log("üß† Loading model for the first time...");
      const modelPath = path.resolve(__dirname, 'model/model.json');
      cachedModel = await tf.loadLayersModel(`file://${modelPath}`);
      console.log("‚úÖ Model loaded successfully!");
    }

    const preds = cachedModel.predict(tensor);
    const result = preds.arraySync();

    // ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå CSV ‡∏ó‡∏¥‡πâ‡∏á‡∏´‡∏•‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à
    fs.unlinkSync(csvPath);
    console.log(`üóëÔ∏è Deleted temporary file: ${csvPath}`);

    return result;

  } catch (error) {
    console.error("‚ùå An error occurred in predictFromCSV:", error);
    // ‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡∏≠‡∏¢‡∏π‡πà
    if (fs.existsSync(csvPath)) {
      fs.unlinkSync(csvPath);
    }
    throw error; // ‡∏™‡πà‡∏á error ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÉ‡∏´‡πâ server ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠
  }
}